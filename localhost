#!/bin/bash

# Deafult Port
def_port='8080'

# Color Codes
CR=$'\e[1;31m' CG=$'\e[1;32m' CY=$'\e[1;33m' CB=$'\e[1;34m' CC=$'\e[1;36m' CW=$'\e[1;37m' RS=$'\e[1;0m'
white=$'\e[1;0m'
red=$'\e[1;31m'
green=$'\e[1;32m'
yellow=$'\e[1;33m'
blue=$'\e[1;34m'
pink=$'\e[1;35m'
#aqua
A=$'\e[1;36m'
White=$'\e[1;37m'

path(){
	printf "\n${RS} ${CR}[${CW}1${CR}]${CY} Use Localhost [Instagram]"
	printf "\n${RS} ${CR}[${CW}2${CR}]${CY} Setup a New Path"
	printf "\n${RS}"
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Select A Localhost option: ${CC}"
	read red_path
	
	if [[ $red_path == 1 || $red_path == m ]]; then
		path=$'/data/data/com.termux/files/home/Instagram'
	elif [[ $red_path == 2 || $red_path == p ]]; then
		printf "\n${RS} ${CC}Enter File Path [Example : /home/Deb/das]"
		printf "\n${RS}"
		printf "\n${RS} ${CR}>>${CG} ${CC}"
		read path
	else
		printf "\n${RS} ${CR}[${CW}!${CR}]${CY} Invalid option ${CR}[${CW}!${CR}]${RS}\n"
		sleep 2 ; logo ; path
	fi

	[[ ! -d "$path" ]] && mkdir -p "$path"  
	menu

}

printf "\n ${A}░CREATE░ ░B░Y░ ░M░A░H░A░D░E░B ░R░U░I░D░A░S░${RESET}"
## Start localhost
localhost() {
	printf "\n${RS} ${CR}[${CW}-${CR}]${CY} Input Port [default:${def_port}]: ${CC}"
	read port
	port="${port:-${def_port}}"
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Starting PHP Server on Port ${CY}${port}${RS}\n"
	cd "$path" && php -S 127.0.0.1:"$port" > /dev/null 2>&1 &
	sleep 2
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Successfully Hosted at : ${CY}http://127.0.0.1:$port ${RS}"
	printf "\n\n ${CR}[${CW}-${CR}]${CC} Press Ctrl + C to exit.${RS}\n"
	while [ true ]; do
		sleep 0.75
	done

}

## Start ngrok2
ngrok() {
	printf "\n${RS} ${CR}[${CW}-${CR}]${CY} Input Port [default:${def_port}]: ${CC}"
	read port
	port="${port:-${def_port}}"
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Starting PHP Server on Port ${CY}${port}${RS}\n"
	cd "$path" && php -S 127.0.0.1:"${port:-${def_port}}" > /dev/null 2>&1 &
	sleep 1
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Launching Ngrok on Port ${CY}${port:-${def_port}}${RS}"

	if [[ `command -v termux-chroot` ]]; then
		sleep 2 && termux-chroot ngrok http 127.0.0.1:"${port:-${def_port}}" --log=stdout > /dev/null 2>&1 &
	else
		sleep 2 && ngrok http 127.0.0.1:"${port:-${def_port}}" --log=stdout > /dev/null 2>&1 &
	fi

	sleep 8
	ngrk=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -Eo '(https)://[^/"]+(.ngrok-free.app)')
	printf "\n\n${RS} ${CR}[${CW}-${CR}]${CG} Successfully Hosted at : ${CY}${ngrk}${RS}"
	printf "\n\n ${CR}[${CW}-${CR}]${CC} Press Ctrl + C to exit.${RS}\n"
	while [ true ]; do
		sleep 0.75
	done

}

menu() {
    
	echo -e "\n${CR} [${CW}01${CR}]${CG} Localhost ${CR}[${CC}Manual Forwarding${CR}]"
	echo -e "${CR} [${CW}02${CR}]${CG} Ngrok-free.app ${CR}[${CC}[Auth Token your]${CR}]"
	printf "\n${RS} ${CR}[${CW}-${CR}]${CG} Select an Option: ${CB}"
	read REPLY

	case $REPLY in 
		1 | 01)
			localhost;;
		2 | 02)
			ngrok;;
		*)
			printf "\n${RS} ${CR}[${CW}!${CR}]${CY} Invalid option ${CR}[${CW}!${CR}]${RS}\n"
			sleep 2; logo; path;;
	esac

}


kill_pid
package
path
